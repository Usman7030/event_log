import type { BaseOptions, AppendResult, AppendExpectedRevision, EventData, EventType } from "../../types";
export interface AppendToStreamOptions extends BaseOptions {
    /**
     * Asks the server to check the stream is at specific revision before writing events.
     * @default ANY
     */
    expectedRevision?: AppendExpectedRevision;
    /**
     * The batch size, in bytes.
     * @default 3 * 1024 * 1024
     */
    batchAppendSize?: number;
}
declare module "../../Client" {
    interface Client {
        /**
         * Appends events to a given stream.
         * @param streamName A stream name.
         * @param events Events or event to write.
         * @param options Writing options.
         */
        appendToStream<KnownEventType extends EventType = EventType>(streamName: string, events: EventData<KnownEventType> | EventData<KnownEventType>[], options?: AppendToStreamOptions): Promise<AppendResult>;
    }
}
