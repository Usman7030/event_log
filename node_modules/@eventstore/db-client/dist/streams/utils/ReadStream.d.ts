/// <reference types="node" />
import { Transform, TransformCallback, TransformOptions } from "stream";
import type { ClientReadableStream } from "@grpc/grpc-js";
import type { ReadResp } from "../../../generated/streams_pb";
import type { StreamingRead } from "../../types";
import { ConvertGrpcEvent } from "../../utils";
declare type CreateGRPCStream = () => Promise<ClientReadableStream<ReadResp>>;
export declare class ReadStream<E> extends Transform implements StreamingRead<E> {
    #private;
    constructor(createGRPCStream: CreateGRPCStream, convertGrpcEvent: ConvertGrpcEvent<ReadResp.ReadEvent, E>, options: TransformOptions);
    private initialize;
    _transform(resp: ReadResp, _encoding: string, next: TransformCallback): void;
    cancel(): Promise<void>;
}
export {};
