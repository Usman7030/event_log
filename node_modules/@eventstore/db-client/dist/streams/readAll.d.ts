/// <reference types="node" />
import type { ReadableOptions } from "stream";
import type { BaseOptions, ReadPosition, Direction, AllStreamResolvedEvent, StreamingRead } from "../types";
export interface ReadAllOptions extends BaseOptions {
    /**
     * The number of events to read.
     * @default Number.MAX_SAFE_INTEGER
     */
    maxCount?: number | BigInt;
    /**
     * Starts the read at the given position.
     * @default START
     */
    fromPosition?: ReadPosition;
    /**
     * The best way to explain link resolution is when using system projections. When reading the stream `$streams` (which
     * contains all streams), each event is actually a link pointing to the first event of a stream. By enabling link
     * resolution feature, the server will also return the event targeted by the link.
     * @default false
     */
    resolveLinkTos?: boolean;
    /**
     * Sets the read direction of the streamconnection.
     * @default FORWARDS
     */
    direction?: Direction;
}
declare module "../Client" {
    interface Client {
        /**
         * Reads events from the $all. You can read forwards or backwards.
         * You might need to be authenticated to execute the command successfully.
         * @param options Reading options.
         */
        readAll(options?: ReadAllOptions, readableOptions?: ReadableOptions): StreamingRead<AllStreamResolvedEvent>;
    }
}
