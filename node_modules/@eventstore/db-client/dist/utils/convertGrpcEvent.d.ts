import type { ReadResp as StreamsReadResp } from "../../generated/streams_pb";
import type { ReadResp as PersistentReadResp } from "../../generated/persistent_pb";
import type { EventType, EventTypeToRecordedEvent, PersistentSubscriptionToStreamResolvedEvent, ResolvedEvent } from "../types";
export declare type GRPCReadResp = StreamsReadResp | PersistentReadResp;
export declare type GRPCReadEvent = StreamsReadResp.ReadEvent | PersistentReadResp.ReadEvent;
export declare type GRPCRecordedEvent = StreamsReadResp.ReadEvent.RecordedEvent | PersistentReadResp.ReadEvent.RecordedEvent;
export declare type ConvertGrpcEvent<GRPCEvent, E> = (grpcEvent: GRPCEvent) => E;
export declare const convertGrpcEvent: <T extends ResolvedEvent<EventType>>(grpcEvent: StreamsReadResp.ReadEvent) => T;
export declare const convertPersistentSubscriptionGrpcEvent: <T extends PersistentSubscriptionToStreamResolvedEvent<EventType>>(grpcEvent: PersistentReadResp.ReadEvent) => T;
export declare const convertGrpcRecord: <E extends EventType = EventType>(grpcRecord: GRPCRecordedEvent) => EventTypeToRecordedEvent<E>;
